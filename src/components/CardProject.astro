---
import type { Technology } from "@data/technologies";
import Github from "./icons/Github.astro";
import ExternalLink from "./icons/ExternalLink.astro";
import Eye from "./icons/Eye.astro";
import Play from "./icons/Play.astro";
import Archive from "./icons/Archive.astro";
import CheckCircle from "./icons/CheckCircle.astro";

const { project } = Astro.props;

const getStatusIcon = (status: string) => {
  switch (status) {
    case "active":
      return Play;
    case "completed":
      return CheckCircle;
    case "archived":
      return Archive;
    default:
      return null;
  }
};

const getStatusColor = (status: string) => {
  switch (status) {
    case "active":
      return "text-green-400 bg-green-400/20 border-green-400/30";
    case "completed":
      return "text-blue-400 bg-blue-400/20 border-blue-400/30";
    case "archived":
      return "text-gray-400 bg-gray-400/20 border-gray-400/30";
    default:
      return "";
  }
};

const StatusIcon = getStatusIcon(project.status);
---

<article class="card group mt-1">
  <div class="relative h-52 overflow-hidden">
    <a href={`/project/${project.id}`}>
      <img
        src={project.cover}
        alt={project.name}
        class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
      />
    </a>
    <!-- <div
      class="absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent"
    >
    </div> -->

    <div
      class={`absolute top-4 left-4 px-2 py-1 rounded-full text-xs font-medium border ${getStatusColor(project.status)} backdrop-blur-sm`}
    >
      <div class="flex items-center gap-1">
        {
          StatusIcon && (
            <StatusIcon
              class={`w-4 h-4 ${getStatusColor(project.status).split(" ")[0]}`}
            />
          )
        }
        <span class="capitalize">{project.status}</span>
      </div>
    </div>

    <div
      class="absolute top-4 right-4 flex gap-2 opacity-0 group-hover:opacity-100 transition-opacity duration-300"
    >
      {
        project.githubUrl && (
          <a
            href={project.githubUrl}
            target="_blank"
            rel="noopener noreferrer"
            class="p-2 rounded-full bg-black/50 hover:bg-black/70 transition-colors backdrop-blur-sm"
          >
            <Github class="w-4 h-4 text-white" />
          </a>
        )
      }
      {
        project.demoUrl && (
          <a
            href={project.demoUrl}
            target="_blank"
            rel="noopener noreferrer"
            class="p-2 rounded-full bg-black/50 hover:bg-black/70 transition-colors backdrop-blur-sm"
          >
            <ExternalLink class="w-4 h-4 text-white" />
          </a>
        )
      }
    </div>
  </div>

  <div class="p-6">
    <h3 class="text-xl font-bold text-white mb-3 leading-tight">
      {project.name}
    </h3>

    {
      project.descriptionShort && (
        <p class="text-gray-300 text-sm leading-relaxed mb-4 line-clamp-3">
          {project.descriptionShort}
        </p>
      )
    }

    <div class="flex flex-wrap gap-2 mb-4">
      {
        project.techDetails.slice(0, 4).map((tech: Technology) => (
          <span
            class="inline-flex items-center rounded-md px-2 w-fit py-1 text-xs font-medium ring-1 ring-inset backdrop-blur-lg"
            style={{
              backgroundColor: tech.bgColor,
              color: tech.textColor,
              borderColor: tech.ringColor,
            }}
          >
            {tech.name}
          </span>
        ))
      }
      {
        project.techDetails.length > 4 && (
          <span class="px-2 py-1 text-xs font-medium rounded-full bg-white/10 text-gray-400 border border-gray-600">
            +{project.techDetails.length - 4} m√°s
          </span>
        )
      }
    </div>

    <div
      class="flex items-center justify-between pt-4 border-t border-white/10"
    >
      <span class="text-xs text-gray-500">
        Proyecto #{project.id.split("-")[0]}
      </span>
      <a
        href={`/project/${project.id}`}
        class="action-btn flex items-center gap-2 px-4 py-2 text-sm font-medium text-white bg-gradient-to-r from-primary to-secondary rounded-lg opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-y-2 group-hover:translate-y-0 hover:scale-105"
      >
        <Eye class="w-4 h-4" />
        Ver Detalles
      </a>
    </div>
  </div>
</article>

<style>
  @reference './../styles/global.css';

  .action-btn:hover {
    box-shadow: 0 10px 30px rgba(0, 212, 255, 0.4);
  }
</style>
